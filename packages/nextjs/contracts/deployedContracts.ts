/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  534351: {
    LyraRamp: {
      address: "0xf750e0b6d4f6a1c0b0b3707cb2191b8b521c2797",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_usdtToken",
              type: "address",
              internalType: "address",
            },
            {
              name: "_usdcToken",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "calculateUsdtEquivalent",
          inputs: [
            {
              name: "_amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_currency",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "completeRampRequest",
          inputs: [
            {
              name: "_requestId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_tokenAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createRampRequest",
          inputs: [
            {
              name: "_currency",
              type: "string",
              internalType: "string",
            },
            {
              name: "_recipientName",
              type: "string",
              internalType: "string",
            },
            {
              name: "_amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_selectedChain",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "feePercentage",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getQRCodeData",
          inputs: [
            {
              name: "_requestId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRampRequest",
          inputs: [
            {
              name: "_requestId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct LyraRamp.RampRequest",
              components: [
                {
                  name: "recipient",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "currency",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "recipientName",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "amount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "usdtEquivalent",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "requestId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "isCompleted",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "timestamp",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "selectedChain",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRate",
          inputs: [
            {
              name: "_currency",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct LyraRamp.Rate",
              components: [
                {
                  name: "rate",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "isActive",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "lastUpdated",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserRequests",
          inputs: [
            {
              name: "_user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "pause",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "rampRequests",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "recipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "currency",
              type: "string",
              internalType: "string",
            },
            {
              name: "recipientName",
              type: "string",
              internalType: "string",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "usdtEquivalent",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "requestId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "isCompleted",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "selectedChain",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "rates",
          inputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "rate",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "isActive",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "lastUpdated",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "requestCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setCurrencyActive",
          inputs: [
            {
              name: "_currency",
              type: "string",
              internalType: "string",
            },
            {
              name: "_isActive",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateFeePercentage",
          inputs: [
            {
              name: "_newFeePercentage",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateRate",
          inputs: [
            {
              name: "_currency",
              type: "string",
              internalType: "string",
            },
            {
              name: "_newRate",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "usdcToken",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "usdtToken",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "userRequests",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "FeeCollected",
          inputs: [
            {
              name: "requestId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "feeAmount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "token",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RampRequestCompleted",
          inputs: [
            {
              name: "requestId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "recipient",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "currency",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "usdtAmount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "selectedChain",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RampRequestCreated",
          inputs: [
            {
              name: "requestId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "recipient",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "currency",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "recipientName",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "usdtEquivalent",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "selectedChain",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RateUpdated",
          inputs: [
            {
              name: "currency",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "oldRate",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newRate",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 11356437,
    },
    TestContract: {
      address: "0xd0bf6b78cb7d23cd10134f5073b47f5da7a2398f",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createPost",
          inputs: [
            {
              name: "_content",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "followUser",
          inputs: [
            {
              name: "_userToFollow",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getPost",
          inputs: [
            {
              name: "_postId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct TestContract.Post",
              components: [
                {
                  name: "id",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "author",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "content",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "timestamp",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "likes",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "exists",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUser",
          inputs: [
            {
              name: "_userAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct TestContract.User",
              components: [
                {
                  name: "userAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "username",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "postCount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "followerCount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "exists",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "hasUserLikedPost",
          inputs: [
            {
              name: "_user",
              type: "address",
              internalType: "address",
            },
            {
              name: "_postId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isUserFollowing",
          inputs: [
            {
              name: "_follower",
              type: "address",
              internalType: "address",
            },
            {
              name: "_following",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "likePost",
          inputs: [
            {
              name: "_postId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "postCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "posts",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "author",
              type: "address",
              internalType: "address",
            },
            {
              name: "content",
              type: "string",
              internalType: "string",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "likes",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "exists",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registerUser",
          inputs: [
            {
              name: "_username",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "unfollowUser",
          inputs: [
            {
              name: "_userToUnfollow",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "unlikePost",
          inputs: [
            {
              name: "_postId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "userCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "userFollows",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "userLikes",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "users",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "userAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "username",
              type: "string",
              internalType: "string",
            },
            {
              name: "postCount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "followerCount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "exists",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "PostCreated",
          inputs: [
            {
              name: "postId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "author",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "content",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PostLiked",
          inputs: [
            {
              name: "postId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "liker",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "author",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PostUnliked",
          inputs: [
            {
              name: "postId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "unliker",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "author",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "UserFollowed",
          inputs: [
            {
              name: "follower",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "following",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "UserRegistered",
          inputs: [
            {
              name: "userAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "username",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "UserUnfollowed",
          inputs: [
            {
              name: "follower",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "following",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 11353088,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
